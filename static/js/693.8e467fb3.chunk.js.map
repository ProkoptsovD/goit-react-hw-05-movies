{"version":3,"file":"static/js/693.8e467fb3.chunk.js","mappings":"4PAEaA,EAAWC,EAAAA,GAAAA,GAAH,sBACRC,EAAeD,EAAAA,GAAAA,GAAH,sBACZE,EAAQF,EAAAA,GAAAA,EAAH,sBACLG,EAAQH,EAAAA,GAAAA,IAAH,sBACLI,EAAOJ,EAAAA,GAAAA,EAAH,sB,SCgCjB,EAhCa,WACT,OAAkCK,EAAAA,EAAAA,WAAS,iBAAM,MAAjD,eAAQC,EAAR,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,QAAqBH,GAASI,MAAK,YAAyB,IAAdC,EAAa,EAArBC,KAAQD,KAC1CN,EAAYM,QAGjB,CAACL,KAGA,8BAEQF,EAASS,QACD,SAAChB,EAAD,UAEQO,EAASU,KAAI,gBAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,GAA3C,OACT,UAACnB,EAAD,YACI,SAACE,EAAD,CAAOkB,IAAMF,EAAeR,EAAAA,EAAAA,WAA0BQ,ECzBjE,yCD0BW,SAACjB,EAAD,UAASe,KACT,SAACb,EAAD,UAAQc,MAHQE,QAQlC,S,4EE3BhBE,EACQ,mBADRA,EAEM,eAFNA,EAGa,SAHbA,EAII,WAJJA,EAKO,WAGbC,IAAAA,SAAAA,QAViB,gCAWjB,IAQaZ,EAAe,CACxBa,kBAPsB,kBAAMD,IAAAA,IAAUD,EAFhB,8CAUtBG,YAPgB,SAACC,GAAD,OAAWH,IAAAA,IAAUD,EAAAA,mDAAgDI,IAQrFC,gBAPoB,SAACnB,GAAD,OAAae,IAAAA,IAAUD,EAA2Bd,EAJhD,8CAYtBoB,QAPY,SAACpB,GAAD,OAAae,IAAAA,IAAUD,EAA2Bd,EAAUc,EALlD,8CAatBO,WAPe,SAACrB,GAAD,OAAae,IAAAA,IAAUD,EAA2Bd,EAAUc,EANrD,8CActBQ,WAxBe","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.component.js","constants/image-fallback.js","services/movieService.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastList = styled.ul``;\nexport const CastListItem = styled.li``;\nexport const Actor = styled.p``;\nexport const Photo = styled.img``;\nexport const Role = styled.p``;","import { imageFallback } from 'constants/image-fallback';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieService } from 'services';\nimport { Actor, CastList, CastListItem, Photo, Role } from \"./Cast.styled\";\n\nconst Cast = () => {\n    const [ castList, setCastList ] = useState(() => []);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        movieService.getCast(movieId).then(({ data: { cast } }) => {\n            setCastList(cast);\n        });\n\n    }, [movieId]);\n\n    return (\n        <>\n            {\n                castList.length\n                    ?   <CastList>\n                            {\n                                castList.map(({ original_name, character, profile_path, id  }) => (\n                                    <CastListItem key={ id }>\n                                        <Photo src={ profile_path ? movieService.POSTER_URL + profile_path : imageFallback } />\n                                        <Actor>{ original_name }</Actor>\n                                        <Role>{ character }</Role>\n                                    </CastListItem>\n                                ))\n                            }\n                        </CastList>\n                    : null\n            }\n        </>\n    );\n}\n\nexport default Cast;","export const imageFallback = 'https://via.placeholder.com/100x100';","import axios from 'axios';\n\nconst AUTH_TOKEN = '5ce599886a4c0703a030654068991e03';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst POSTER_URL = 'https://image.tmdb.org/t/p/original'\nconst END_POINTS = {\n    TRENDING: 'trending/all/day',\n    SEARCH: 'search/movie',\n    MOVIE_DETAILS: 'movie/',\n    CAST: '/credits',\n    REVIEWS: '/reviews'\n}\n\naxios.defaults.baseURL = BASE_URL;\nconst appendToken = () => '?api_key=' + AUTH_TOKEN;\n\nconst getTrendingMovies = () => axios.get(END_POINTS.TRENDING + appendToken());\nconst searchMovie = (movie) => axios.get(END_POINTS.SEARCH + appendToken() + '&query=' + movie);\nconst getMovieDetails = (movieId) => axios.get(END_POINTS.MOVIE_DETAILS + movieId + appendToken());\nconst getCast = (movieId) => axios.get(END_POINTS.MOVIE_DETAILS + movieId + END_POINTS.CAST + appendToken());\nconst getReviews = (movieId) => axios.get(END_POINTS.MOVIE_DETAILS + movieId + END_POINTS.REVIEWS + appendToken());\n\nexport const movieService = {\n    getTrendingMovies,\n    searchMovie,\n    getMovieDetails,\n    getCast,\n    getReviews,\n    POSTER_URL\n}"],"names":["CastList","styled","CastListItem","Actor","Photo","Role","useState","castList","setCastList","movieId","useParams","useEffect","movieService","then","cast","data","length","map","original_name","character","profile_path","id","src","END_POINTS","axios","getTrendingMovies","searchMovie","movie","getMovieDetails","getCast","getReviews","POSTER_URL"],"sourceRoot":""}