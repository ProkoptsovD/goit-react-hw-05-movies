{"version":3,"file":"static/js/307.76fe3709.chunk.js","mappings":"0PAEaA,EAAcC,EAAAA,GAAAA,GAAH,sBACXC,EAAkBD,EAAAA,GAAAA,GAAH,sBACfE,EAAWF,EAAAA,GAAAA,GAAH,sBACRG,EAAcH,EAAAA,GAAAA,EAAH,sB,SC+BxB,EA/BgB,WACZ,OAAgCI,EAAAA,EAAAA,WAAS,iBAAM,MAA/C,eAAQC,EAAR,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,WAAwBH,GAASI,MAAK,YAA4B,IAAjBC,EAAgB,EAAxBC,KAAQD,QAC7CN,EAAWM,QAGhB,CAACL,KAGA,8BAEQF,EAAQS,QACA,SAACf,EAAD,UAEQM,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACR,UAACjB,EAAD,YACI,SAACC,EAAD,UAAYc,KACZ,SAACb,EAAD,UAAec,MAFIC,SAOrC,sE,4ECzBhBC,EACQ,mBADRA,EAEM,eAFNA,EAGa,SAHbA,EAII,WAJJA,EAKO,WAGbC,IAAAA,SAAAA,QAViB,gCAWjB,IAQaV,EAAe,CACxBW,kBAPsB,kBAAMD,IAAAA,IAAUD,EAFhB,8CAUtBG,YAPgB,SAACC,GAAD,OAAWH,IAAAA,IAAUD,EAAAA,mDAAgDI,IAQrFC,gBAPoB,SAACjB,GAAD,OAAaa,IAAAA,IAAUD,EAA2BZ,EAJhD,8CAYtBkB,QAPY,SAAClB,GAAD,OAAaa,IAAAA,IAAUD,EAA2BZ,EAAUY,EALlD,8CAatBO,WAPe,SAACnB,GAAD,OAAaa,IAAAA,IAAUD,EAA2BZ,EAAUY,EANrD,8CActBQ,WAxBe","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.component.js","services/movieService.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewsList = styled.ul``;\nexport const ReviewsListItem = styled.li``;\nexport const UserName = styled.h3``;\nexport const CommentText = styled.p``;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieService } from 'services';\nimport { ReviewsList, ReviewsListItem, UserName, CommentText } from './Reviews.styled';\n\nconst Reviews = () => {\n    const [ reviews, setreviews ] = useState(() => []);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        movieService.getReviews(movieId).then(({ data: { results } }) => {\n            setreviews(results);\n        });\n\n    }, [movieId]);\n\n    return (\n        <>\n            {\n                reviews.length\n                    ?   <ReviewsList>\n                            {\n                                reviews.map(({ author, content, id  }) => (\n                                    <ReviewsListItem key={ id }>\n                                        <UserName>{ author }</UserName>\n                                        <CommentText>{ content }</CommentText>\n                                    </ReviewsListItem>\n                                ))\n                            }\n                        </ReviewsList>\n                    : <p>We don't have any review for this film</p>\n            }\n        </>\n    );\n}\n\nexport default Reviews;","import axios from 'axios';\n\nconst AUTH_TOKEN = '5ce599886a4c0703a030654068991e03';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst POSTER_URL = 'https://image.tmdb.org/t/p/original'\nconst END_POINTS = {\n    TRENDING: 'trending/all/day',\n    SEARCH: 'search/movie',\n    MOVIE_DETAILS: 'movie/',\n    CAST: '/credits',\n    REVIEWS: '/reviews'\n}\n\naxios.defaults.baseURL = BASE_URL;\nconst appendToken = () => '?api_key=' + AUTH_TOKEN;\n\nconst getTrendingMovies = () => axios.get(END_POINTS.TRENDING + appendToken());\nconst searchMovie = (movie) => axios.get(END_POINTS.SEARCH + appendToken() + '&query=' + movie);\nconst getMovieDetails = (movieId) => axios.get(END_POINTS.MOVIE_DETAILS + movieId + appendToken());\nconst getCast = (movieId) => axios.get(END_POINTS.MOVIE_DETAILS + movieId + END_POINTS.CAST + appendToken());\nconst getReviews = (movieId) => axios.get(END_POINTS.MOVIE_DETAILS + movieId + END_POINTS.REVIEWS + appendToken());\n\nexport const movieService = {\n    getTrendingMovies,\n    searchMovie,\n    getMovieDetails,\n    getCast,\n    getReviews,\n    POSTER_URL\n}"],"names":["ReviewsList","styled","ReviewsListItem","UserName","CommentText","useState","reviews","setreviews","movieId","useParams","useEffect","movieService","then","results","data","length","map","author","content","id","END_POINTS","axios","getTrendingMovies","searchMovie","movie","getMovieDetails","getCast","getReviews","POSTER_URL"],"sourceRoot":""}