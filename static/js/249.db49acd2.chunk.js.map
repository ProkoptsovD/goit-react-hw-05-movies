{"version":3,"file":"static/js/249.db49acd2.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.component.js","components/common/Section/Section.styled.js","components/common/Section/Section.component.js","constants/notifications.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.component.js","pages/MoviePage.js","services/movieService.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Movies = styled.ul`\n    padding: 2px;\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\nexport const Movie = styled.li`\n    padding: 10px 15px;\n\n    &:not(:last-child) {\n        margin-bottom: 5px;\n        border-bottom: 1px solid #dadada;\n    }\n`;","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Movie, Movies } from './MovieList.styled';\n\nconst MovieList = ({ movies, path, location }) => {\n    return (\n        <Movies>\n            {\n                movies.map(({ id, name, original_title, original_name }) => (\n                    <Movie key={ id }>\n                        <Link\n                            to={path ? `${path}/${id}` : id.toString() }\n                            state={{ from: location }}\n                        >\n                            { name || original_title || original_name }\n                        </Link>\n                    </Movie>\n                ))\n            }\n        </Movies>\n    )\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string,\n            id: PropTypes.number\n        })\n    ),\n    path: PropTypes.string,\n    location: PropTypes.shape({\n        hash: PropTypes.string,\n        key: PropTypes.string,\n        pathname: PropTypes.string,\n        search: PropTypes.string,\n        state: PropTypes.object,\n    })\n}\n\nexport default MovieList;","import styled from 'styled-components';\n\nexport const AppSection = styled.section``;\nexport const SectionTitle = styled.h1`\n    margin-bottom: 20px;\n    text-align: center;\n    color: inherit;\n`; ","import PropTypes from 'prop-types';\nimport Container from '../Container';\nimport { AppSection, SectionTitle } from './Section.styled';\n\nconst Section = ({ children, title }) => {\n    return (\n        <AppSection>\n            <Container>\n                {\n                    title && <SectionTitle>\n                                {title}\n                            </SectionTitle>\n                }\n                {children}\n            </Container>\n        </AppSection>\n    )\n}\n\nSection.propTypes = {\n    children: PropTypes.node,\n    title: PropTypes.string\n}\n\nexport default Section;","export const notifications = {\n    emptyQuery: 'Searching query mustn\\'t be an empty string! Please, type in something to start the searching...',\n    invalidQuery: 'Sorry, but there is no results by the query',\n}","import styled from 'styled-components';\n\nexport const SearchBar = styled.header`\n    top: 0;\n    left: 0;\n    position: sticky;\n    z-index: 1100;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 64px;\n    padding-right: 24px;\n    padding-left: 24px;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    color: #fff;\n    background-color: #3f51b5;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n        0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n`;\n\nexport const Input = styled.input`\n    display: block;\n    width: 100%;\n    height: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 12px;\n    padding-right: 4px;\n`;\n\nexport const SerchButton = styled.button`\n    display: inline-block;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 120px;\n    height: 30px;\n    margin: 0 auto;\n    font: inherit;\n    border: none;\n    background-color: skyblue;\n    color: #ffffff;\n    opacity: 0.6;\n    outline: none;\n    \n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n\n    &:active {\n        box-shadow: inset 0px 0px 4px 0px #fafafa;\n    }\n    &:disabled {\n        background-color: #cacaca;\n        cursor: not-allowed;\n    }\n\n    &:hover {\n        opacity: 1;\n    }\n`;","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchBar, SearchForm, Input, SerchButton } from './Searchbar.styled';\nimport Container from 'components/common/Container';\n\nexport const Searchbar = ({ onSubmit, clearInput }) => {\n    const [ inputValue, setInputValue ] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const sanitizedQuery = inputValue.trim().toLowerCase();\n        onSubmit(sanitizedQuery);\n    }\n\n    useEffect(() => {     \n        if(clearInput) setInputValue('');\n        \n    }, [clearInput]);\n\n\n    return (\n        <SearchBar>\n            <Container>\n                <SearchForm \n                    onSubmit={handleSubmit}\n                >\n                    <SerchButton type=\"submit\">\n                        Search\n                    </SerchButton>\n    \n                    <Input\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                        value={inputValue}\n                        onChange={(e) => setInputValue(e.target.value)}\n                    />\n                </SearchForm>\n            </Container>\n        </SearchBar>\n    )\n}\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    clearInput: PropTypes.bool,\n}\n\nexport default Searchbar;","    import { useEffect, useState } from \"react\";\n    import { useLocation, useSearchParams } from \"react-router-dom\";\n    import { movieService } from \"services\";\n    import { toast } from 'react-toastify';\n    import { notifications } from \"constants/notifications\";\n    import Searchbar from \"components/Searchbar\";\n    import MovieList from \"components/MovieList\";\nimport Section from \"components/common/Section\";\n\n    const MoviePage = () => {\n        const [ movieList, setMovieList ] = useState(() => []);\n        const [ shouldClearInput, setShouldClearInput ] = useState(false);\n        const [ searchParams, setSearchParams ] = useSearchParams();\n        const location = useLocation();\n\n        const movie = searchParams.get('query')\n\n        useEffect(() => {\n            if(movie === null) {\n                return;\n            };\n\n            if(movie === '') {\n                toast.warn(notifications.emptyQuery);\n                \n                return;\n            }\n\n            movieService.searchMovie(movie).then(({ data: { results } }) => {\n                if (!results.length) {\n                    toast.error(notifications.invalidQuery);\n                    \n                    return;\n                }\n\n                setShouldClearInput(true);\n                setMovieList(results);\n            }).catch(console.log);\n        }, [movie])\n\n        return (\n            <main>\n                <Searchbar\n                    onSubmit={ (movie) => setSearchParams({ query: movie }) }\n                    clearInput={ shouldClearInput }\n                />\n                <Section>\n                    {\n                        movieList.length\n                            ?   <MovieList\n                                    movies={ movieList }\n                                    location={location}\n                                />\n                            : null\n                    }\n                </Section>\n            </main>\n        )\n    }\n\nexport default MoviePage;","import axios from 'axios';\n\nconst AUTH_TOKEN = '5ce599886a4c0703a030654068991e03';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst POSTER_URL = 'https://image.tmdb.org/t/p/original'\nconst END_POINTS = {\n    TRENDING: 'trending/all/day',\n    SEARCH: 'search/movie',\n    MOVIE_DETAILS: 'movie/',\n    CAST: '/credits',\n    REVIEWS: '/reviews'\n}\n\naxios.defaults.baseURL = BASE_URL;\nconst appendToken = () => '?api_key=' + AUTH_TOKEN;\n\nconst getTrendingMovies = async () => {\n    try {\n        const response = await axios.get(END_POINTS.TRENDING + appendToken());\n        if(response.status === 200) {\n            return response;\n        }\n\n        throw new Error(response)\n    } catch (error) {\n        console.log(error);\n    }\n};\nconst searchMovie = async (movie) => {\n    try {\n        const response = await axios.get(END_POINTS.SEARCH + appendToken() + '&query=' + movie);\n        if(response.status === 200) {\n            return response;\n        }\n\n        throw new Error(response)\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nconst getMovieDetails = async (movieId) => {\n    try {\n        const response = await axios.get(END_POINTS.MOVIE_DETAILS + movieId + appendToken());\n        if(response.status === 200) {\n            return response;\n        }\n\n        throw new Error(response)\n    } catch (error) {\n        console.log(error);\n    }\n}\nconst getCast = async (movieId) => {\n    try {\n        const response = await axios.get(END_POINTS.MOVIE_DETAILS + movieId + END_POINTS.CAST + appendToken());\n        if(response.status === 200) {\n            return response;\n        }\n\n        throw new Error(response)\n    } catch (error) {\n        console.log(error);\n    }\n}\nconst getReviews = async (movieId) => {\n    try {\n        const response = await axios.get(END_POINTS.MOVIE_DETAILS + movieId + END_POINTS.REVIEWS + appendToken());\n        if(response.status === 200) {\n            return response;\n        }\n\n        throw new Error(response)\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const movieService = {\n    getTrendingMovies,\n    searchMovie,\n    getMovieDetails,\n    getCast,\n    getReviews,\n    POSTER_URL\n}"],"names":["Movies","styled","Movie","movies","path","location","map","id","name","original_title","original_name","to","toString","state","from","AppSection","SectionTitle","children","title","Container","notifications","SearchBar","SearchForm","Input","SerchButton","onSubmit","clearInput","useState","inputValue","setInputValue","useEffect","e","preventDefault","sanitizedQuery","trim","toLowerCase","type","autoComplete","autoFocus","placeholder","value","onChange","target","movieList","setMovieList","shouldClearInput","setShouldClearInput","useSearchParams","searchParams","setSearchParams","useLocation","movie","get","movieService","then","results","data","length","toast","catch","console","log","query","Section","MovieList","END_POINTS","axios","getTrendingMovies","response","status","Error","searchMovie","getMovieDetails","movieId","getCast","getReviews","POSTER_URL"],"sourceRoot":""}