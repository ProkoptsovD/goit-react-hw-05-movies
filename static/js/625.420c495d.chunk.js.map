{"version":3,"file":"static/js/625.420c495d.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.component.js","components/common/Section/Section.styled.js","components/common/Section/Section.component.js","components/Home/Home.component.js","pages/HomePage.js","services/movieService.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Movies = styled.ul`\n    padding: 2px;\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\nexport const Movie = styled.li`\n    padding: 10px 15px;\n\n    &:not(:last-child) {\n        margin-bottom: 5px;\n        border-bottom: 1px solid #dadada;\n    }\n`;","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Movie, Movies } from './MovieList.styled';\n\nconst MovieList = ({ movies, path, location }) => {\n    return (\n        <Movies>\n            {\n                movies.map(({ id, name, original_title, original_name }) => (\n                    <Movie key={ id }>\n                        <Link\n                            to={path ? `${path}/${id}` : id.toString() }\n                            state={{ from: location }}\n                        >\n                            { name || original_title || original_name }\n                        </Link>\n                    </Movie>\n                ))\n            }\n        </Movies>\n    )\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string,\n            id: PropTypes.number\n        })\n    ),\n    path: PropTypes.string,\n    location: PropTypes.shape({\n        hash: PropTypes.string,\n        key: PropTypes.string,\n        pathname: PropTypes.string,\n        search: PropTypes.string,\n        state: PropTypes.object,\n    })\n}\n\nexport default MovieList;","import styled from 'styled-components';\n\nexport const AppSection = styled.section``;\nexport const SectionTitle = styled.h1`\n    margin-bottom: 20px;\n    text-align: center;\n    color: inherit;\n`; ","import PropTypes from 'prop-types';\nimport Container from '../Container';\nimport { AppSection, SectionTitle } from './Section.styled';\n\nconst Section = ({ children, title }) => {\n    return (\n        <AppSection>\n            <Container>\n                {\n                    title && <SectionTitle>\n                                {title}\n                            </SectionTitle>\n                }\n                {children}\n            </Container>\n        </AppSection>\n    )\n}\n\nSection.propTypes = {\n    children: PropTypes.node,\n    title: PropTypes.string\n}\n\nexport default Section;","import { useEffect, useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport { movieService } from \"services\";\nimport { ROUTES } from \"constants/routes\";\nimport MovieList from \"components/MovieList\";\n\nconst Home = () => {\n    const [ trendingMovies, setTrendingMovies ] = useState(() => []);\n    const location = useLocation();\n\n    useEffect(() => {\n        movieService.getTrendingMovies()\n            .then(({ data: { results } }) => setTrendingMovies(results))\n            .catch(console.log);\n    }, [])\n\n    return (\n        <>\n            {\n                trendingMovies.length\n                    ?  <MovieList\n                            movies={ trendingMovies }\n                            path={ ROUTES.movies }\n                            location={location}\n                        />\n                    : null\n            }\n        </>\n    )\n}\n\nexport default Home;","import Section from \"components/common/Section\";\nimport Home from \"components/Home\";\n\nconst HomePage = () => {\n    return (\n        <main>\n            <Section title=\"Trending today\">\n                <Home />\n            </Section>\n        </main>\n    )\n}\n\nexport default HomePage;","import axios from 'axios';\n\nconst AUTH_TOKEN = '5ce599886a4c0703a030654068991e03';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst POSTER_URL = 'https://image.tmdb.org/t/p/original'\nconst END_POINTS = {\n    TRENDING: 'trending/all/day',\n    SEARCH: 'search/movie',\n    MOVIE_DETAILS: 'movie/',\n    CAST: '/credits',\n    REVIEWS: '/reviews'\n}\n\naxios.defaults.baseURL = BASE_URL;\nconst appendToken = () => '?api_key=' + AUTH_TOKEN;\n\nconst getTrendingMovies = async () => {\n    try {\n        const response = await axios.get(END_POINTS.TRENDING + appendToken());\n        if(response.status === 200) {\n            return response;\n        }\n\n        throw new Error(response)\n    } catch (error) {\n        console.log(error);\n    }\n};\nconst searchMovie = async (movie) => {\n    try {\n        const response = await axios.get(END_POINTS.SEARCH + appendToken() + '&query=' + movie);\n        if(response.status === 200) {\n            return response;\n        }\n\n        throw new Error(response)\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nconst getMovieDetails = async (movieId) => {\n    try {\n        const response = await axios.get(END_POINTS.MOVIE_DETAILS + movieId + appendToken());\n        console.log(response);\n        if(response.status === 200) {\n            return response;\n        }\n\n        throw new Error(response)\n    } catch (error) {\n        console.log(error);\n    }\n}\nconst getCast = async (movieId) => {\n    try {\n        const response = await axios.get(END_POINTS.MOVIE_DETAILS + movieId + END_POINTS.CAST + appendToken());\n        if(response.status === 200) {\n            return response;\n        }\n\n        throw new Error(response)\n    } catch (error) {\n        console.log(error);\n    }\n}\nconst getReviews = async (movieId) => {\n    try {\n        const response = await axios.get(END_POINTS.MOVIE_DETAILS + movieId + END_POINTS.REVIEWS + appendToken());\n        if(response.status === 200) {\n            return response;\n        }\n\n        throw new Error(response)\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const movieService = {\n    getTrendingMovies,\n    searchMovie,\n    getMovieDetails,\n    getCast,\n    getReviews,\n    POSTER_URL\n}"],"names":["Movies","styled","Movie","movies","path","location","map","id","name","original_title","original_name","to","toString","state","from","AppSection","SectionTitle","children","title","Container","useState","trendingMovies","setTrendingMovies","useLocation","useEffect","movieService","then","results","data","catch","console","log","length","MovieList","ROUTES","Section","END_POINTS","axios","getTrendingMovies","response","status","Error","searchMovie","movie","getMovieDetails","movieId","getCast","getReviews","POSTER_URL"],"sourceRoot":""}