{"version":3,"file":"static/js/608.9f7c7643.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.component.js","components/common/Section/Section.styled.js","components/common/Section/Section.component.js","constants/image-fallback.js","services/movieService.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastList = styled.ul``;\nexport const CastListItem = styled.li`\n    display: flex;\n\n    & > :not(:last-child) {\n        margin-bottom: 5px;\n    }\n`;\nexport const Actor = styled.p``;\nexport const Photo = styled.img`\n    width: 200px;\n    height: 300px;\n`;\nexport const Role = styled.p``;\nexport const Wrapper = styled.div`\n    padding-top: 20px;\n    padding-left: 40px;\n\n    & > :not(:last-child) {\n        margin-bottom: 5px;\n    }\n`;\nexport const StyledSpan = styled.span`\n    font-weight: 700;\n`;\nexport const NoCast = styled.p`\n    margin-bottom: 20px;\n`;","import Section from 'components/common/Section';\nimport { imageFallback } from 'constants/image-fallback';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieService } from 'services';\nimport { Actor, CastList, CastListItem, Photo, Role, Wrapper, StyledSpan, NoCast } from \"./Cast.styled\";\n\nconst Cast = () => {\n    const [ castList, setCastList ] = useState(() => []);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        movieService.getCast(movieId)\n        .then(({ data: { cast } }) => setCastList(cast))\n        .catch(console.log);\n\n    }, [movieId]);\n\n    return (\n        <Section title='Cast'>\n            {\n                castList.length\n                    ?   <CastList>\n                            {\n                                castList.map(({ original_name, character, profile_path, id  }) => (\n                                    <CastListItem key={ id }>\n                                        <Photo src={ profile_path ? movieService.POSTER_URL + profile_path : imageFallback } />\n                                        <Wrapper>\n                                            <Actor>Actor: \n                                                <StyledSpan> { original_name }</StyledSpan>\n                                            </Actor>\n                                            <Role>Character: \n                                                <StyledSpan> { character }</StyledSpan>\n                                            </Role>\n                                        </Wrapper>\n                                    </CastListItem>\n                                ))\n                            }\n                        </CastList>\n                    : <NoCast>We don't have information about the cast for this movie</NoCast>\n            }\n        </Section>\n    );\n}\n\nexport default Cast;","import styled from 'styled-components';\n\nexport const AppSection = styled.section``;\nexport const SectionTitle = styled.h1`\n    margin-bottom: 20px;\n    text-align: center;\n    color: inherit;\n`; ","import PropTypes from 'prop-types';\nimport Container from '../Container';\nimport { AppSection, SectionTitle } from './Section.styled';\n\nconst Section = ({ children, title }) => {\n    return (\n        <AppSection>\n            <Container>\n                {\n                    title && <SectionTitle>\n                                {title}\n                            </SectionTitle>\n                }\n                {children}\n            </Container>\n        </AppSection>\n    )\n}\n\nSection.propTypes = {\n    children: PropTypes.node,\n    title: PropTypes.string\n}\n\nexport default Section;","export const imageFallback = require('../assets/image-fallback.png');","import axios from 'axios';\n\nconst AUTH_TOKEN = '5ce599886a4c0703a030654068991e03';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst POSTER_URL = 'https://image.tmdb.org/t/p/original'\nconst END_POINTS = {\n    TRENDING: 'trending/all/day',\n    SEARCH: 'search/movie',\n    MOVIE_DETAILS: 'movie/',\n    CAST: '/credits',\n    REVIEWS: '/reviews'\n}\n\naxios.defaults.baseURL = BASE_URL;\nconst appendToken = () => '?api_key=' + AUTH_TOKEN;\n\nconst getTrendingMovies = async () => {\n    try {\n        const response = await axios.get(END_POINTS.TRENDING + appendToken());\n        if(response.status === 200) {\n            return response;\n        }\n\n        throw new Error(response)\n    } catch (error) {\n        console.log(error);\n    }\n};\nconst searchMovie = async (movie) => {\n    try {\n        const response = await axios.get(END_POINTS.SEARCH + appendToken() + '&query=' + movie);\n        if(response.status === 200) {\n            return response;\n        }\n\n        throw new Error(response)\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nconst getMovieDetails = async (movieId) => {\n    try {\n        const response = await axios.get(END_POINTS.MOVIE_DETAILS + movieId + appendToken());\n        if(response.status === 200) {\n            return response;\n        }\n\n        throw new Error(response)\n    } catch (error) {\n        console.log(error);\n    }\n}\nconst getCast = async (movieId) => {\n    try {\n        const response = await axios.get(END_POINTS.MOVIE_DETAILS + movieId + END_POINTS.CAST + appendToken());\n        if(response.status === 200) {\n            return response;\n        }\n\n        throw new Error(response)\n    } catch (error) {\n        console.log(error);\n    }\n}\nconst getReviews = async (movieId) => {\n    try {\n        const response = await axios.get(END_POINTS.MOVIE_DETAILS + movieId + END_POINTS.REVIEWS + appendToken());\n        if(response.status === 200) {\n            return response;\n        }\n\n        throw new Error(response)\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const movieService = {\n    getTrendingMovies,\n    searchMovie,\n    getMovieDetails,\n    getCast,\n    getReviews,\n    POSTER_URL\n}"],"names":["CastList","styled","CastListItem","Actor","Photo","Role","Wrapper","StyledSpan","NoCast","useState","castList","setCastList","movieId","useParams","useEffect","movieService","then","cast","data","catch","console","log","Section","title","length","map","original_name","character","profile_path","id","src","imageFallback","AppSection","SectionTitle","children","Container","require","END_POINTS","axios","getTrendingMovies","response","status","Error","searchMovie","movie","getMovieDetails","getCast","getReviews","POSTER_URL"],"sourceRoot":""}