{"version":3,"file":"static/js/882.7ccf251e.chunk.js","mappings":"2MAEaA,EAASC,EAAAA,GAAAA,GAAH,sBACNC,EAAQD,EAAAA,GAAAA,GAAH,sB,SCqClB,EApCkB,SAAC,GAAgC,IAA9BE,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC/B,OACI,SAACL,EAAD,UAEQG,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACP,SAACN,EAAD,WACI,SAAC,KAAD,CACIO,GAAIL,EAAI,UAAMA,EAAN,YAAcG,GAAOA,EAAGG,WAChCC,MAAO,CAAEC,KAAMP,GAFnB,SAIMG,KALGD,U,uGCPpBM,EAAaZ,EAAAA,GAAAA,QAAH,4CAGVa,EAAeb,EAAAA,GAAAA,GAAH,gG,SCmBzB,EApBgB,SAAC,GAAyB,IAAvBc,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACzB,OACI,SAACH,EAAD,WACI,UAACI,EAAA,EAAD,WAEQD,IAAS,SAACF,EAAD,UACIE,IAGhBD,Q,gDCajB,EArBa,WACT,OAA4CG,EAAAA,EAAAA,WAAS,iBAAM,MAA3D,eAAOC,EAAP,KAAuBC,EAAvB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,oBAAiCC,MAAK,gBAAWC,EAAX,EAAGC,KAAQD,QAAX,OAA2BJ,EAAkBI,QACpF,KAGC,8BAEQL,EAAeO,QACR,SAACC,EAAA,EAAD,CACKxB,OAASgB,EACTf,KAAOwB,EAAAA,EAAAA,SAEb,QCPtB,EAViB,WACb,OACI,2BACI,SAAC,EAAD,CAASZ,MAAM,iBAAf,UACI,SAAC,EAAD,U,4ECFVa,EACQ,mBADRA,EAEM,eAFNA,EAGa,SAHbA,EAII,WAJJA,EAKO,WAGbC,IAAAA,SAAAA,QAViB,gCAWjB,IAQaR,EAAe,CACxBS,kBAPsB,kBAAMD,IAAAA,IAAUD,EAFhB,8CAUtBG,YAPgB,SAACC,GAAD,OAAWH,IAAAA,IAAUD,EAAAA,mDAAgDI,IAQrFC,gBAPoB,SAACC,GAAD,OAAaL,IAAAA,IAAUD,EAA2BM,EAJhD,8CAYtBC,QAPY,SAACD,GAAD,OAAaL,IAAAA,IAAUD,EAA2BM,EAAUN,EALlD,8CAatBQ,WAPe,SAACF,GAAD,OAAaL,IAAAA,IAAUD,EAA2BM,EAAUN,EANrD,8CActBS,WAxBe","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.component.js","components/common/Section/Section.styled.js","components/common/Section/Section.component.js","components/Home/Home.component.js","pages/HomePage.js","services/movieService.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Movies = styled.ul``;\nexport const Movie = styled.li``;","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Movie, Movies } from './MovieList.styled';\n\nconst MovieList = ({ movies, path, location }) => {\n    return (\n        <Movies>\n            {\n                movies.map(({ id, original_title }) => (\n                    <Movie key={ id }>\n                        <Link\n                            to={path ? `${path}/${id}` : id.toString() }\n                            state={{ from: location }}\n                        >\n                            { original_title }\n                        </Link>\n                    </Movie>\n                ))\n            }\n        </Movies>\n    )\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string,\n            id: PropTypes.number\n        })\n    ),\n    path: PropTypes.string,\n    location: PropTypes.shape({\n        hash: PropTypes.string,\n        key: PropTypes.string,\n        pathname: PropTypes.string,\n        search: PropTypes.string,\n        state: PropTypes.object,\n    })\n}\n\nexport default MovieList;","import styled from 'styled-components';\n\nexport const AppSection = styled.section`\n    padding: 40px;\n`;\nexport const SectionTitle = styled.h1`\n    margin-bottom: 20px;\n    text-align: center;\n    color: inherit;\n`;","import PropTypes from 'prop-types';\nimport Container from '../Container';\nimport { AppSection, SectionTitle } from './Section.styled';\n\nconst Section = ({ children, title }) => {\n    return (\n        <AppSection>\n            <Container>\n                {\n                    title && <SectionTitle>\n                                {title}\n                            </SectionTitle>\n                }\n                {children}\n            </Container>\n        </AppSection>\n    )\n}\n\nSection.propTypes = {\n    children: PropTypes.node,\n    title: PropTypes.string\n}\n\nexport default Section;","import { useEffect, useState } from \"react\";\nimport { movieService } from \"services\";\nimport { ROUTES } from \"constants/routes\";\nimport MovieList from \"components/MovieList\";\n\nconst Home = () => {\n    const [trendingMovies, setTrendingMovies] = useState(() => []);\n\n    useEffect(() => {\n        movieService.getTrendingMovies().then(({ data: { results } }) => setTrendingMovies(results));\n    }, [])\n\n    return (\n        <>\n            {\n                trendingMovies.length\n                    ?  <MovieList\n                            movies={ trendingMovies }\n                            path={ ROUTES.movies }\n                        />\n                    : null\n            }\n        </>\n    )\n}\n\nexport default Home;","import Section from \"components/common/Section\";\nimport Home from \"components/Home\";\n\nconst HomePage = () => {\n    return (\n        <main>\n            <Section title=\"Trending today\">\n                <Home />\n            </Section>\n        </main>\n    )\n}\n\nexport default HomePage;","import axios from 'axios';\n\nconst AUTH_TOKEN = '5ce599886a4c0703a030654068991e03';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst POSTER_URL = 'https://image.tmdb.org/t/p/original'\nconst END_POINTS = {\n    TRENDING: 'trending/all/day',\n    SEARCH: 'search/movie',\n    MOVIE_DETAILS: 'movie/',\n    CAST: '/credits',\n    REVIEWS: '/reviews'\n}\n\naxios.defaults.baseURL = BASE_URL;\nconst appendToken = () => '?api_key=' + AUTH_TOKEN;\n\nconst getTrendingMovies = () => axios.get(END_POINTS.TRENDING + appendToken());\nconst searchMovie = (movie) => axios.get(END_POINTS.SEARCH + appendToken() + '&query=' + movie);\nconst getMovieDetails = (movieId) => axios.get(END_POINTS.MOVIE_DETAILS + movieId + appendToken());\nconst getCast = (movieId) => axios.get(END_POINTS.MOVIE_DETAILS + movieId + END_POINTS.CAST + appendToken());\nconst getReviews = (movieId) => axios.get(END_POINTS.MOVIE_DETAILS + movieId + END_POINTS.REVIEWS + appendToken());\n\nexport const movieService = {\n    getTrendingMovies,\n    searchMovie,\n    getMovieDetails,\n    getCast,\n    getReviews,\n    POSTER_URL\n}"],"names":["Movies","styled","Movie","movies","path","location","map","id","original_title","to","toString","state","from","AppSection","SectionTitle","children","title","Container","useState","trendingMovies","setTrendingMovies","useEffect","movieService","then","results","data","length","MovieList","ROUTES","END_POINTS","axios","getTrendingMovies","searchMovie","movie","getMovieDetails","movieId","getCast","getReviews","POSTER_URL"],"sourceRoot":""}